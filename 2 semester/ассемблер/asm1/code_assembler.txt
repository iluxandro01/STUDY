# include <iostream>	
using namespace std;

int main()
{
	system("color F0");
	setlocale(LC_ALL, "Russian");
	short int a = 29;
	short int b = 5;
	short int c = -34;
	short int d = 44;
	short int res;
	res = ((b * b - a) / (c + 12)) + 4 * d;
	_asm {
		//((b^2-a) Div (c+12)) + 4 * d
		mov ax, b    //в регистр ax помещаем значение переменной b
		mul b        //умножаем b на ax сохраняя полученный результат в ax; ax = 18 * 18 = 324

		mov bx, a    //в регистр bx помещаем значение переменной a
		sub ax, bx   //вычитаем из ax bx сохраняя полученный результат в ax; ax = 324 - 29 = 295 

		mov bx, c    //в регистр bx помещаем значение перменной c
		add bx, 12   //к регистру bx добавляем 12 сохряняя полученный результат в bx; bx = -34 + 12 = -22

		
		xor dx, dx   //очищаем мусор лежащий в dx после умножения
		cwd          //расширение регистра ax на два регистра ax и dx

		idiv bx		 //знаковое деление - делим ax на bx 
					 //в регистр dx попадет остаток от деления, а в ax делитель
					 //ax = -13, dx = 9

		mov cx, ax   //сохраним значение регистра ax в регистр cx, ибо при следующем умножении ax будет использован

		mov ax, 4	 //в регистр ax помещаем 4
		mul d		 //умножаем ax на d сохраняя в ax = 4 * 44 = 176

		add ax, cx   //добавляем к регистру ax значение регистра cx, сохраняя в ax 176 + (-13) = 163

	    mov b, ax    //переносим значение из регистра ax в переменную b
	}
	cout << "результат asm = " << b << endl << "результат c++ = " << res << endl;
	return 0;
}
